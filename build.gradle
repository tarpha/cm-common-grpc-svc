plugins {
	id 'java'
    id 'application'
	id "com.google.protobuf" version "0.9.2"
}

group = 'kbank.cm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
//	mavenCentral()
 	maven {
        allowInsecureProtocol true
        url 'http://localhost:8081/repository/maven-public/'
    }
}

def grpcVersion = '1.53.0'
def protobufVersion = '3.21.7'
def protocVersion = protobufVersion

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    
    implementation 'commons-codec:commons-codec:1.15'

    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc { 
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" 
        }
    }
    generateProtoTasks {
        all()*.plugins { 
            grpc {} 
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  mainClass = 'kbank.cm.common.server.EncryptUtilServer'
}

jar {
    manifest {
        attributes('Main-Class': 'kbank.cm.common.server.EncryptUtilServer')
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

startScripts.enabled = false